swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /movie:
    # our controller name
    x-swagger-router-controller: new_movie
    get:
      description: get the movies list
      # define the type of response for Success "200" and Error
      operationId: getAll
      parameters:
        - name: name
          in: query
          description: The name of the movie
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetMoviesListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: add a new movie to the list
      operationId: saveNew
      # movie info to be stored
      parameters:
        - name: movie
          in: body
          description: movie to be added
          required: true
          schema:
            $ref: '#/definitions/NewMovie'
      responses:
        "201":
          description: Null response
        default:
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorResponse'
  /movieId/{id}:
    # our controller name
    x-swagger-router-controller: new_movie
    get:
      description: get a movie
      # define the type of response for Success "200" and Error
      operationId: getOneByID
      parameters:
        - name: id
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetMovieResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update a movie by ID
      operationId: updateByID
      parameters:
        - name: id
          type: string
          in: path
          required: true
        - name: movie
          in: body
          description: movie to be added
          required: true
          schema:
            $ref: '#/definitions/NewMovie'
      responses:
        "201":
          description: Null response
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /movieName/{name}:
    # our controller name
    x-swagger-router-controller: new_movie
    get:
      description: get a movie
      # define the type of response for Success "200" and Error
      operationId: getOneByName
      parameters:
        - name: name
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetMoviesListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
 
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  GetMoviesListResponse:
    required:
      - movies
    properties:
      # The array of movies
      movies:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            title:
              type: string
            year:
              type: number
  NewMovie:
    required:
      - name 
    properties:
      name:
        type: string
  GetMovieResponse:
    type: object
    properties:
      movies:
        type: object
        items:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment
    required:
      - success
      - description